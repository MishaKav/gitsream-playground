name: Deploy To Dev
run-name: Sync `${{ inputs.env || 'DEV' }}` with PROD

on:
  # when changing this, also change the `if` condition in the 1-3 steps below (L48 - L58)
  schedule:
    - cron: '*/15 * * * *' # dev-01 - every 15 minutes
    - cron: '*/20 * * * *' # dev-02 - every 20 minutes
  workflow_dispatch:
    inputs:
      env:
        description: 'Select the environment you want to deploy to:'
        required: true
        type: choice
        options:
          - dev-01
          - dev-02
          - dev-03
          - qa-01
      service:
        description: 'Select the service you want to deploy:'
        required: true
        type: choice
        options:
          - api-gateway
          - automations-mfa
          - dev-coaching-mfa
          - e2e-api
          - e2e-worker
          - graphql-api
          - linjobs
          - linpr
          - linrest
          - linta
          - notifier
          - pdt-api
          - pm-connectors
          - pm-rest
          - resources-api
          - sensors
          - settings
          - sls-app-notifications-center
          - sls-audit
          - sls-custom-dashboard-api
          - sls-customer-data
          - sls-error-handling
          - sls-invitation
          - sls-jobs-dispatcher-lambda
          - sls-metrics-api
          - sls-notification-digest-lambda
          - sls-on-prem-api
          - sls-pm-report-lambda
          - sls-pm-view
          - sls-public-api
          - sls-resource-allocation
          - sls-rule-engine-lambda
          - sls-scheduled-jobs-suites
          - sls-settings-events-lambda
          - sls-tokens
          - sls-tsdb-workers
          - sls-webhooks
          - sls-webhooks-internal-api
          - workerb-api
      duration:
        description: 'Specify the duration you need the service for:'
        required: true
        type: choice
        options:
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 5h
          - 6h
          - 7h
          - 8h
          - all day
      ref:
        description: 'Provide the ref (tag or branch) you want to deploy:'
        required: true

concurrency:
  group: deploy-${{ inputs.env }}-${{ inputs.service }}

env:
  ENV: ${{ inputs.env }}

jobs:
  deploy:
    name: '${{ inputs.env }} Deployment'
    runs-on: ubuntu-latest
    env:
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      SLACK_USERNAME: $GITHUB_ACTOR
      SLACK_CHANNEL: taking-envs
      CI_USER_GIT_TOKEN: ${{ secrets.CI_USER_GIT_TOKEN }}
      PYTHON_VERSION: 3.8
      KUBECTL_VERSION: v1.30.0
      HELM_VERSION: v3.14.4
      GH_ACTOR: ${{ github.actor }}
      SERVICE_NAME: ${{ inputs.service }}
      ESTIMATED_DURATION: ${{ inputs.duration }}
      REF: ${{ inputs.ref }}
      OVERRIDE_SERVICE: ${{ inputs.override }}
      ENV: ${{ inputs.env }}

    steps:
      - name: Set dev-01 variable for Sunday sync
        if: github.event.schedule == '*/15 * * * *'
        run: echo "ENV=dev-01" >> $GITHUB_ENV

      - name: Set dev-01 variable for Sunday sync
        if: github.event.schedule == '*/20 * * * *'
        run: echo "ENV=dev-02" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: PIP Cache
        id: pip-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt
          pip install -r deploy/requirements.txt
          pip install -r linenv/requirements.txt

      - name: Check Boto3 Version
        run: |
          python check_boto3_version.py

      - name: Set Region Variable
        id: set-region
        run: |
          case "$ENV" in
            dev-01) REGION="eu-central-1" ;;
            dev-02) REGION="eu-west-1" ;;
            dev-03) REGION="eu-west-3" ;;
            qa-01) REGION="eu-south-1" ;;
            *) echo "Invalid environment specified. Region variable not set." && exit 1 ;;
          esac
          echo "REGION=${REGION}" | tee -a $GITHUB_ENV

      - name: Notify Slack About Deployment
        uses: Ilshidur/action-slack@master
        with:
          args: |
            <!here> ${{ github.actor }} is taking `${{ inputs.service }}` in `${{ env.ENV }}` (_${{ env.REGION }}_) for `${{ inputs.duration }}`
